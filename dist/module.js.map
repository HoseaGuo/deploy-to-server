{"mappings":"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","sources":["index.ts"],"sourcesContent":["/* \r\n  部署流程\r\n\r\n  打包后：\r\n\r\n  通过ssh连接服务器\r\n  对打包文件里的所有文件到文件压缩 -> 压缩文件\r\n  上传到服务器，服务器进行解压\r\n  删除远程文件\r\n  删除本地文件\r\n  远程进行package.json依赖安装\r\n  pm2启动项目\r\n\r\n*/\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nimport DraftLog from 'draftlog';\r\nimport archiver from 'archiver';\r\nimport { NodeSSH } from \"node-ssh\";\r\nimport { exit } from 'process';\r\nimport chalk from 'chalk'\r\n\r\nDraftLog(console)\r\n\r\nconst ssh = new NodeSSH();\r\n\r\ntype Options = {\r\n  /* 本地打包路径 */\r\n  distPath?: string,\r\n  /* 服务器部署路径 */\r\n  serverPath?: string,\r\n  /* 是否安装npm包 */\r\n  installNpmPackage?: boolean,\r\n  /* 打包文件名 */\r\n  zipFileame?: string\r\n}\r\n\r\nlet defaultOptions: Options = {\r\n  /* 本地打包路径 */\r\n  distPath: \"./dist\",\r\n  /* 服务器部署路径 */\r\n  serverPath: \"/data/www/test\",\r\n  /* 是否安装npm包 */\r\n  installNpmPackage: true,\r\n  /* 打包文件名 */\r\n  zipFileame: '_dist.zip'\r\n}\r\n\r\nlet userOptions: Options = {};\r\n\r\n// 压缩文件\r\nasync function compressZip() {\r\n  const output = fs.createWriteStream(__dirname + '/' + userOptions.zipFileame);\r\n  const archive = archiver('zip', {\r\n    zlib: { level: 9 } // Sets the compression level.\r\n  });\r\n\r\n  archive.pipe(output);\r\n\r\n  archive.directory(defaultOptions.distPath!, false);\r\n\r\n  archive.finalize();\r\n\r\n  // let update = console.draft(\"本地打包文件压缩：开始\")\r\n\r\n  let endLoaing = loadingLog('本地打包文件压缩')\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    archive.on('error', function (err) {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n\r\n    output.on('close', function () {\r\n      endLoaing()\r\n      resolve(true)\r\n    });\r\n  })\r\n}\r\n\r\n// 上传压缩文件\r\nasync function uploadZip() {\r\n  let endLoaing = loadingLog('上传打包文件到远程')\r\n  await ssh.putFile(userOptions.zipFileame!, `/data/www/test/${userOptions.zipFileame}`)\r\n  endLoaing()\r\n}\r\n\r\n// 移除服务器上原有文件\r\nasync function cleanServerDir() {\r\n  let endLoaing = loadingLog('删除远程源文件')\r\n  // 进入远程部署目录\r\n  ssh.execCommand(`cd ${defaultOptions.serverPath}`, { cwd: defaultOptions.serverPath });\r\n  // 删除除了node_modules外的文件\r\n  ssh.execCommand(`rm \\`find ./* |egrep -v 'node_modules'\\` -rf`, { cwd: defaultOptions.serverPath });\r\n  endLoaing()\r\n}\r\n\r\nasync function uncompressZip() {\r\n\r\n  let endLoaing = loadingLog('解压远程压缩文件及删除')\r\n  // 进入远程部署目录\r\n  ssh.execCommand(`cd ${defaultOptions.serverPath}`, { cwd: defaultOptions.serverPath });\r\n  // 解压压缩文件\r\n  ssh.execCommand(`unzip -o ${userOptions.zipFileame} -d .`, { cwd: defaultOptions.serverPath });\r\n  // 删除压缩文件\r\n  ssh.execCommand(`rm ${userOptions.zipFileame}`, { cwd: defaultOptions.serverPath });\r\n  endLoaing();\r\n}\r\n\r\n// 删除本地打包文件\r\nconst deleteLocalZip = async () => {\r\n  return new Promise((resolve, reject) => {\r\n    let endLoaing = loadingLog('删除本地zip包')\r\n    fs.unlink(userOptions.zipFileame, (err: any) => {\r\n      if (err) {\r\n        console.log(err);\r\n        console.log(\"删除本地zip失败\");\r\n        process.exit(1);\r\n      }\r\n\r\n      endLoaing();\r\n      resolve(true);\r\n    });\r\n  });\r\n};\r\n\r\nasync function installPackage() {\r\n  let endLoaing = loadingLog('远程安装npm包')\r\n  // 进入远程部署目录\r\n  ssh.execCommand(`cd ${defaultOptions.serverPath}`, { cwd: defaultOptions.serverPath });\r\n  // package npm 安装\r\n  await ssh.execCommand(`npm i`, { cwd: defaultOptions.serverPath });\r\n  endLoaing();\r\n}\r\n\r\n\r\nfunction loadingLog(str: string) {\r\n  let startTimestamp = process.hrtime.bigint();\r\n  let frames = ['-', '\\\\', '|', '/']\r\n  let index = 0;\r\n  let update = console.draft(str + frames[index]);\r\n  let timer = setInterval(() => {\r\n    index = (index + 1) % frames.length\r\n    update(`[${frames[index]}] ${str}`);\r\n  }, 50)\r\n  return function end(isSuccess: boolean = true) {\r\n    clearInterval(timer);\r\n    if (isSuccess) {\r\n      let endTimestamp = process.hrtime.bigint();\r\n\r\n      update(chalk.green(`[√] ${str} `) + chalk.whiteBright(formatNs(endTimestamp - startTimestamp)));\r\n    } else {\r\n      update(chalk.red(`[×] ${str}`));\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatNs(nsTime: any) {\r\n  // console.log(nsTime)\r\n  nsTime = Number(nsTime);\r\n  // console.log(nsTime)\r\n  // 1542 928 800\r\n  if (nsTime < 1000) { // 100n\r\n    return `${(nsTime / 1000).toFixed(3)}ms`\r\n  } else if (nsTime < 1000 ** 2) { // 100 000n\r\n    return `${(nsTime / 1000).toFixed(3)}ms`\r\n  } else if (nsTime < 1000 ** 3) { // 100s 000m 000n\r\n    return `${(nsTime / (1000 ** 3)).toFixed(3)}s`\r\n  } else {\r\n    return `${(nsTime / (1000 ** 3)).toFixed(3)}s`\r\n  }\r\n}\r\n\r\nexport default function deploy(options: Options) {\r\n  userOptions = Object.assign({}, defaultOptions, options);\r\n\r\n  console.log(chalk.blueBright(\"开始部署 >>>\"))\r\n\r\n  let sshLoading = loadingLog(\"ssh连接服务器成功\");\r\n\r\n  ssh.connect({\r\n    host: '8.134.82.20',\r\n    username: 'root',\r\n    password: 'GUOHXa!3579'\r\n  }).then(async function () {\r\n    sshLoading();\r\n    cleanServerDir();\r\n    await compressZip();\r\n    await uploadZip();\r\n    await deleteLocalZip();\r\n    uncompressZip();\r\n    if (defaultOptions.installNpmPackage) {\r\n      await installPackage();\r\n    }\r\n\r\n    ssh.dispose(); //断开连接\r\n\r\n    console.log(chalk.blueBright(\"<<< 结束部署\"));\r\n  })\r\n}\r\n\r\n/* async function buildPackageJson() {\r\n  try {\r\n    console.log(\"构建package.json文件开始\");\r\n    let packageJson = require(\"./package.json\");\r\n    let newPackageJson = {\r\n      dependencies: packageJson.dependencies,\r\n    };\r\n    fs.writeFileSync(\"./dist/package.json\", JSON.stringify(newPackageJson));\r\n    console.log(\"构建package.json文件结束\");\r\n  } catch (e) {\r\n    console.log(e);\r\n    console.log(\"构建package.json文件失败\");\r\n    process.exit(1); //退出流程\r\n  }\r\n} */\r\n\r\n"],"names":[],"version":3,"file":"module.js.map"}